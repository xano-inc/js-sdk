{"version":3,"file":"xano.min.js","mappings":"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","sources":["webpack://@xano/js-sdk/./src/enums/content-type.ts","webpack://@xano/js-sdk/./src/enums/request-type.ts","webpack://@xano/js-sdk/./src/enums/response-type.ts","webpack://@xano/js-sdk/./src/errors/request.ts","webpack://@xano/js-sdk/./src/models/response.ts","webpack://@xano/js-sdk/./src/xano-client.ts","webpack://@xano/js-sdk/webpack/bootstrap","webpack://@xano/js-sdk/webpack/runtime/global","webpack://@xano/js-sdk/./src/index.web.ts"],"sourcesContent":["export enum XanoContentType {\r\n    JSON = 'application/json',\r\n    Multipart = 'multipart/form-data',\r\n    Text = 'text/plain',\r\n};\r\n","export enum XanoRequestType {\r\n    DELETE = 'DELETE',\r\n    GET = 'GET',\r\n    HEAD = 'HEAD',\r\n    PATCH = 'PATCH',\r\n    POST = 'POST',\r\n    PUT = 'PUT',\r\n}\r\n","export enum XanoResponseType {\n    JSON = 'json',\n    Text = 'text',\n    Default = JSON\n}","import { XanoResponse } from \"../models/response\";\n\nexport class XanoRequestError extends Error {\n    public getHttpResponse: () => XanoResponse;\n\n    constructor(message: string, httpResponse: XanoResponse) {\n        super(message);\n\n        this.getHttpResponse = (): XanoResponse => {\n            return httpResponse;\n        };\n    }\n}","export class XanoResponse {\r\n    private body: any;\r\n    private response: Response;\r\n\r\n    constructor(response: Response, body: any) {\r\n        this.body = body;\r\n        this.response = response;\r\n    }\r\n\r\n    public getBody(): any {\r\n        return this.body;\r\n    }\r\n\r\n    public getHeaders(): Record<string, string> {\r\n        let headers: Record<string, string> = {};\r\n\r\n        this.response.headers.forEach((value: string, key: string) => {\r\n            headers[key] = value;\r\n        });\r\n\r\n        return headers;\r\n    }\r\n\r\n    public getStatusCode(): number {\r\n        return this.response.status;\r\n    }\r\n}\r\n","import { XanoClientConfig } from \"./interfaces/client-config\";\r\nimport { XanoContentType } from \"./enums/content-type\";\r\nimport { XanoFormData } from \"./interfaces/form-data\";\r\nimport { XanoRequestError } from \"./errors/request\";\r\nimport { XanoRequestParams } from \"./interfaces/request-params\";\r\nimport { XanoRequestType } from \"./enums/request-type\";\r\nimport { XanoResponse } from \"./models/response\";\r\nimport { XanoResponseType } from \"./enums/response-type\";\r\n\r\nexport class XanoClient {\r\n    private config: XanoClientConfig = {\r\n        apiGroupBaseUrl: null,\r\n        authToken: null,\r\n        responseType: XanoResponseType.Default\r\n    };\r\n\r\n    constructor(config: XanoClientConfig) {\r\n        this.config = {\r\n            ...this.config,\r\n            ...config\r\n        };\r\n    }\r\n\r\n    private buildFormData(bodyData: Record<any, any>): XanoFormData {\r\n        let formData: FormData = new FormData();\r\n        let hasFile = false;\r\n        let rawFormData: Record<any, any> = {};\r\n\r\n        Object.entries(bodyData).forEach((entry: any) => {\r\n            const isFile = (entry[1] instanceof File);\r\n\r\n            if (isFile) {\r\n                hasFile = true;\r\n            }\r\n\r\n            if (typeof entry[1] === 'object' && !isFile) {\r\n                entry[1] = JSON.stringify(entry[1]);\r\n            }\r\n\r\n            rawFormData[entry[0]] = entry[1];\r\n            formData.append(entry[0], entry[1]);\r\n        });\r\n\r\n        return <XanoFormData>{\r\n            formData,\r\n            hasFile,\r\n            rawFormData\r\n        };\r\n    }\r\n\r\n    private hasAuthToken(): boolean {\r\n        return typeof this.config?.authToken === 'string' && this.config.authToken.length > 0;\r\n    }\r\n\r\n    private request(params: XanoRequestParams): Promise<XanoResponse> {\r\n        const requestHeaders: HeadersInit = new Headers();\r\n        const url = new URL(`${this.config.apiGroupBaseUrl}${params.endpoint}`);\r\n\r\n        if (params.urlParams) {\r\n            this.updateUrlWithParams(url, params.urlParams)\r\n        }\r\n\r\n        if (this.hasAuthToken()) {\r\n            requestHeaders.set('Authorization', `Bearer ${this.config.authToken}`);\r\n        }\r\n\r\n        if (params.method === XanoRequestType.HEAD) {\r\n            requestHeaders.set('Accept', XanoContentType.Text);\r\n        } else if (this.config.responseType === XanoResponseType.Text) {\r\n            requestHeaders.set('Accept', XanoContentType.Text);\r\n        } else if (this.config.responseType === XanoResponseType.JSON) {\r\n            requestHeaders.set('Accept', XanoContentType.JSON);\r\n        }\r\n\r\n        let requestOptions: Partial<RequestInit> = {\r\n            headers: requestHeaders,\r\n            method: params.method\r\n        };\r\n\r\n        if (params.bodyParams) {\r\n            const ret = this.buildFormData(params.bodyParams);\r\n\r\n            if (ret.hasFile) {\r\n                requestHeaders.delete('Content-Type');\r\n                requestOptions.body = ret.formData;\r\n            } else {\r\n                requestHeaders.set('Content-Type', XanoContentType.JSON);\r\n                requestOptions.body = JSON.stringify(ret.rawFormData);\r\n            }\r\n        }\r\n\r\n        let rawResponse: Response;\r\n\r\n        return fetch(url.toString(), requestOptions).then(\r\n            (response: Response) => {\r\n                rawResponse = response;\r\n\r\n                if (requestHeaders.get('Accept') === XanoContentType.JSON) {\r\n                    return response.json();\r\n                }\r\n\r\n                return response.text();\r\n            }\r\n        ).then(\r\n            (data: any) => {\r\n                const response = new XanoResponse(rawResponse, data);\r\n\r\n                if (!rawResponse.ok) {\r\n                    throw new XanoRequestError('There was an error with your request', response);\r\n                }\r\n\r\n                return response;\r\n            }\r\n        );\r\n    }\r\n\r\n    private updateUrlWithParams(url: URL, params: Record<any, any>): void {\r\n        let urlParams = new URLSearchParams(url.search);\r\n\r\n        Object.keys(params).forEach((index) => {\r\n            urlParams.set(index, params[index]);\r\n        });\r\n\r\n        url.search = urlParams.toString();\r\n    }\r\n\r\n    public setAuthToken(authToken: string | null): XanoClient {\r\n        this.config.authToken = authToken;\r\n\r\n        return this;\r\n    }\r\n\r\n    public setResponseType(responseType: XanoResponseType): XanoClient {\r\n        this.config.responseType = responseType;\r\n\r\n        return this;\r\n    }\r\n\r\n    public delete(endpoint: string, params?: Record<any, any>): Promise<XanoResponse> {\r\n        return this.request({\r\n            bodyParams: params,\r\n            endpoint: endpoint,\r\n            method: XanoRequestType.DELETE,\r\n        });\r\n    }\r\n\r\n    public get(endpoint: string, params?: Record<any, any>): Promise<XanoResponse> {\r\n        return this.request({\r\n            endpoint: endpoint,\r\n            method: XanoRequestType.GET,\r\n            urlParams: params,\r\n        });\r\n    }\r\n\r\n    public head(endpoint: string, params?: Record<any, any>): Promise<XanoResponse> {\r\n        return this.request({\r\n            endpoint: endpoint,\r\n            method: XanoRequestType.HEAD,\r\n            urlParams: params,\r\n        });\r\n    }\r\n\r\n    public patch(endpoint: string, params?: Record<any, any>): Promise<XanoResponse> {\r\n        return this.request({\r\n            bodyParams: params,\r\n            endpoint: endpoint,\r\n            method: XanoRequestType.PATCH,\r\n        });\r\n    }\r\n\r\n    public post(endpoint: string, params?: Record<any, any>): Promise<XanoResponse> {\r\n        return this.request({\r\n            bodyParams: params,\r\n            endpoint: endpoint,\r\n            method: XanoRequestType.POST,\r\n        });\r\n    }\r\n\r\n    public put(endpoint: string, params?: Record<any, any>): Promise<XanoResponse> {\r\n        return this.request({\r\n            bodyParams: params,\r\n            endpoint: endpoint,\r\n            method: XanoRequestType.PUT,\r\n        });\r\n    }\r\n}\r\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","import { XanoClient } from './xano-client';\r\n\r\ndeclare global {\r\n    var XanoClient: any;\r\n}\r\n\r\nglobal.XanoClient = XanoClient;\r\n"],"names":["XanoContentType","XanoRequestType","XanoResponseType","message","httpResponse","getHttpResponse","Error","XanoRequestError","response","body","this","getBody","getHeaders","headers","forEach","value","key","getStatusCode","status","XanoResponse","config","apiGroupBaseUrl","authToken","responseType","Default","buildFormData","bodyData","formData","FormData","hasFile","rawFormData","Object","entries","entry","isFile","File","JSON","stringify","append","hasAuthToken","length","request","params","requestHeaders","Headers","url","URL","endpoint","urlParams","updateUrlWithParams","set","method","HEAD","Text","rawResponse","requestOptions","bodyParams","ret","delete","fetch","toString","then","get","json","text","data","ok","URLSearchParams","search","keys","index","setAuthToken","setResponseType","DELETE","GET","head","patch","PATCH","post","POST","put","PUT","XanoClient","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","exports","module","__webpack_modules__","call","g","globalThis","Function","e","window"],"sourceRoot":""}